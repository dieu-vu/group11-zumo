ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"rtos_main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.start_zmain,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	start_zmain, %function
  24              	start_zmain:
  25              	.LFB69:
  26              		.file 1 "ZumoLibrary\\rtos_main.c"
   1:ZumoLibrary/rtos_main.c **** /*
   2:ZumoLibrary/rtos_main.c ****  * FreeRTOS Kernel V10.0.1
   3:ZumoLibrary/rtos_main.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ZumoLibrary/rtos_main.c ****  *
   5:ZumoLibrary/rtos_main.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ZumoLibrary/rtos_main.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:ZumoLibrary/rtos_main.c ****  * the Software without restriction, including without limitation the rights to
   8:ZumoLibrary/rtos_main.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ZumoLibrary/rtos_main.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ZumoLibrary/rtos_main.c ****  * subject to the following conditions:
  11:ZumoLibrary/rtos_main.c ****  *
  12:ZumoLibrary/rtos_main.c ****  * The above copyright notice and this permission notice shall be included in all
  13:ZumoLibrary/rtos_main.c ****  * copies or substantial portions of the Software.
  14:ZumoLibrary/rtos_main.c ****  *
  15:ZumoLibrary/rtos_main.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:ZumoLibrary/rtos_main.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:ZumoLibrary/rtos_main.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:ZumoLibrary/rtos_main.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:ZumoLibrary/rtos_main.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:ZumoLibrary/rtos_main.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:ZumoLibrary/rtos_main.c ****  *
  22:ZumoLibrary/rtos_main.c ****  * http://www.FreeRTOS.org
  23:ZumoLibrary/rtos_main.c ****  * http://aws.amazon.com/freertos
  24:ZumoLibrary/rtos_main.c ****  *
  25:ZumoLibrary/rtos_main.c ****  * 1 tab == 4 spaces!
  26:ZumoLibrary/rtos_main.c ****  */
  27:ZumoLibrary/rtos_main.c **** 
  28:ZumoLibrary/rtos_main.c **** #include <project.h>
  29:ZumoLibrary/rtos_main.c **** #include <stdio.h>
  30:ZumoLibrary/rtos_main.c **** 
  31:ZumoLibrary/rtos_main.c **** /* RTOS includes. */
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 2


  32:ZumoLibrary/rtos_main.c **** #include "FreeRTOS.h"
  33:ZumoLibrary/rtos_main.c **** #include "task.h"
  34:ZumoLibrary/rtos_main.c **** #include "queue.h"
  35:ZumoLibrary/rtos_main.c **** #include "semphr.h"
  36:ZumoLibrary/rtos_main.c **** 
  37:ZumoLibrary/rtos_main.c **** #include "serial.h"
  38:ZumoLibrary/rtos_main.c **** #include "serial1.h"
  39:ZumoLibrary/rtos_main.c **** #include "debug_uart.h"
  40:ZumoLibrary/rtos_main.c **** #include "mqtt_sender.h"
  41:ZumoLibrary/rtos_main.c **** #include "simulator.h"
  42:ZumoLibrary/rtos_main.c **** #include "zumo_config.h"
  43:ZumoLibrary/rtos_main.c **** 
  44:ZumoLibrary/rtos_main.c **** #ifndef START_MQTT
  45:ZumoLibrary/rtos_main.c **** #define START_MQTT 0
  46:ZumoLibrary/rtos_main.c **** #endif    
  47:ZumoLibrary/rtos_main.c **** 
  48:ZumoLibrary/rtos_main.c **** 
  49:ZumoLibrary/rtos_main.c **** 
  50:ZumoLibrary/rtos_main.c **** extern void zmain(void);
  51:ZumoLibrary/rtos_main.c **** 
  52:ZumoLibrary/rtos_main.c **** /*
  53:ZumoLibrary/rtos_main.c ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  54:ZumoLibrary/rtos_main.c ****  */
  55:ZumoLibrary/rtos_main.c **** static void prvHardwareSetup( void );
  56:ZumoLibrary/rtos_main.c **** /*---------------------------------------------------------------------------*/
  57:ZumoLibrary/rtos_main.c **** 
  58:ZumoLibrary/rtos_main.c **** static void start_zmain(void *p) {
  27              		.loc 1 58 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  59:ZumoLibrary/rtos_main.c ****     (void) p; // we don't use this parameter
  60:ZumoLibrary/rtos_main.c ****     zmain();
  36              		.loc 1 60 0
  37 0002 FFF7FEFF 		bl	zmain
  38              	.LVL1:
  61:ZumoLibrary/rtos_main.c ****     printf("\n\n\nERROR - ZMAIN ENDED!!!\n\n");
  39              		.loc 1 61 0
  40 0006 0348     		ldr	r0, .L3
  41 0008 FFF7FEFF 		bl	puts
  42              	.LVL2:
  62:ZumoLibrary/rtos_main.c ****     vTaskSuspend(NULL);
  43              		.loc 1 62 0
  44 000c 0020     		movs	r0, #0
  45 000e FFF7FEFF 		bl	vTaskSuspend
  46              	.LVL3:
  47 0012 08BD     		pop	{r3, pc}
  48              	.L4:
  49              		.align	2
  50              	.L3:
  51 0014 00000000 		.word	.LC0
  52              		.cfi_endproc
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 3


  53              	.LFE69:
  54              		.size	start_zmain, .-start_zmain
  55              		.section	.text.prvHardwareSetup,"ax",%progbits
  56              		.align	2
  57              		.thumb
  58              		.thumb_func
  59              		.type	prvHardwareSetup, %function
  60              	prvHardwareSetup:
  61              	.LFB71:
  63:ZumoLibrary/rtos_main.c **** }
  64:ZumoLibrary/rtos_main.c **** 
  65:ZumoLibrary/rtos_main.c **** int main( void )
  66:ZumoLibrary/rtos_main.c **** {
  67:ZumoLibrary/rtos_main.c ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  68:ZumoLibrary/rtos_main.c **** 	prvHardwareSetup();
  69:ZumoLibrary/rtos_main.c **** 
  70:ZumoLibrary/rtos_main.c ****     
  71:ZumoLibrary/rtos_main.c ****     /* Task initializations */
  72:ZumoLibrary/rtos_main.c ****     vSerial1PortInitMinimal(256);
  73:ZumoLibrary/rtos_main.c ****     RetargetInit();
  74:ZumoLibrary/rtos_main.c ****     
  75:ZumoLibrary/rtos_main.c ****     //DebugUartTaskInit();
  76:ZumoLibrary/rtos_main.c ****   	//( void ) xTaskCreate( DebugUartTask, "DbgUart", configMINIMAL_STACK_SIZE, NULL, tskIDLE_PRIORI
  77:ZumoLibrary/rtos_main.c ****   	//( void ) xTaskCreate( DebugCommandTask, "DbgCmd", configMINIMAL_STACK_SIZE * 3, NULL, tskIDLE_
  78:ZumoLibrary/rtos_main.c ****     
  79:ZumoLibrary/rtos_main.c ****   	( void ) xTaskCreate( start_zmain, "Zumo", configMINIMAL_STACK_SIZE * 10, NULL, tskIDLE_PRIORITY
  80:ZumoLibrary/rtos_main.c **** #if START_MQTT == 1
  81:ZumoLibrary/rtos_main.c ****     MQTTSendTaskInit();
  82:ZumoLibrary/rtos_main.c ****   	( void ) xTaskCreate( MQTTSendTask, "MQTT_send", configMINIMAL_STACK_SIZE * 10, NULL, tskIDLE_PR
  83:ZumoLibrary/rtos_main.c **** #endif    
  84:ZumoLibrary/rtos_main.c **** #if ZUMO_SIMULATOR == 1  
  85:ZumoLibrary/rtos_main.c ****     SimulatorTaskInit();
  86:ZumoLibrary/rtos_main.c ****   	( void ) xTaskCreate( SimulatorTask, "Simulator", configMINIMAL_STACK_SIZE * 10, NULL, tskIDLE_P
  87:ZumoLibrary/rtos_main.c **** #endif    
  88:ZumoLibrary/rtos_main.c ****     
  89:ZumoLibrary/rtos_main.c **** 	/* Will only get here if there was insufficient memory to create the idle
  90:ZumoLibrary/rtos_main.c ****     task.  The idle task is created within vTaskStartScheduler(). */
  91:ZumoLibrary/rtos_main.c **** 	vTaskStartScheduler();
  92:ZumoLibrary/rtos_main.c **** 
  93:ZumoLibrary/rtos_main.c **** 	/* Should never reach here as the kernel will now be running.  If
  94:ZumoLibrary/rtos_main.c **** 	vTaskStartScheduler() does return then it is very likely that there was
  95:ZumoLibrary/rtos_main.c **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  96:ZumoLibrary/rtos_main.c **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  97:ZumoLibrary/rtos_main.c **** 	for( ;; );
  98:ZumoLibrary/rtos_main.c **** }
  99:ZumoLibrary/rtos_main.c **** /*---------------------------------------------------------------------------*/
 100:ZumoLibrary/rtos_main.c **** 
 101:ZumoLibrary/rtos_main.c **** 
 102:ZumoLibrary/rtos_main.c **** #if 0
 103:ZumoLibrary/rtos_main.c **** void __malloc_lock (struct _reent *reent) {
 104:ZumoLibrary/rtos_main.c ****     (void) reent;
 105:ZumoLibrary/rtos_main.c ****     vTaskSuspendAll();
 106:ZumoLibrary/rtos_main.c **** }
 107:ZumoLibrary/rtos_main.c **** 
 108:ZumoLibrary/rtos_main.c **** void __malloc_unlock (struct _reent *reent) {
 109:ZumoLibrary/rtos_main.c ****     (void) reent;
 110:ZumoLibrary/rtos_main.c ****     xTaskResumeAll();
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 4


 111:ZumoLibrary/rtos_main.c **** }
 112:ZumoLibrary/rtos_main.c **** #endif
 113:ZumoLibrary/rtos_main.c **** 
 114:ZumoLibrary/rtos_main.c **** void prvHardwareSetup( void )
 115:ZumoLibrary/rtos_main.c **** {
  62              		.loc 1 115 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66 0000 08B5     		push	{r3, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
 116:ZumoLibrary/rtos_main.c **** /* Port layer functions that need to be copied into the vector table. */
 117:ZumoLibrary/rtos_main.c **** extern void xPortPendSVHandler( void );
 118:ZumoLibrary/rtos_main.c **** extern void xPortSysTickHandler( void );
 119:ZumoLibrary/rtos_main.c **** extern void vPortSVCHandler( void );
 120:ZumoLibrary/rtos_main.c **** extern cyisraddress CyRamVectors[];
 121:ZumoLibrary/rtos_main.c **** 
 122:ZumoLibrary/rtos_main.c **** 	/* Install the OS Interrupt Handlers. */
 123:ZumoLibrary/rtos_main.c **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  70              		.loc 1 123 0
  71 0002 064B     		ldr	r3, .L7
  72 0004 064A     		ldr	r2, .L7+4
  73 0006 DA62     		str	r2, [r3, #44]
 124:ZumoLibrary/rtos_main.c **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
  74              		.loc 1 124 0
  75 0008 064A     		ldr	r2, .L7+8
  76 000a 9A63     		str	r2, [r3, #56]
 125:ZumoLibrary/rtos_main.c **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  77              		.loc 1 125 0
  78 000c 064A     		ldr	r2, .L7+12
  79 000e DA63     		str	r2, [r3, #60]
 126:ZumoLibrary/rtos_main.c **** 
 127:ZumoLibrary/rtos_main.c **** 	/* Start-up the peripherals. */
 128:ZumoLibrary/rtos_main.c **** 	UART_1_Start();
  80              		.loc 1 128 0
  81 0010 FFF7FEFF 		bl	UART_1_Start
  82              	.LVL4:
 129:ZumoLibrary/rtos_main.c ****     UART_2_Start();
  83              		.loc 1 129 0
  84 0014 FFF7FEFF 		bl	UART_2_Start
  85              	.LVL5:
  86 0018 08BD     		pop	{r3, pc}
  87              	.L8:
  88 001a 00BF     		.align	2
  89              	.L7:
  90 001c 00000000 		.word	CyRamVectors
  91 0020 00000000 		.word	vPortSVCHandler
  92 0024 00000000 		.word	xPortPendSVHandler
  93 0028 00000000 		.word	xPortSysTickHandler
  94              		.cfi_endproc
  95              	.LFE71:
  96              		.size	prvHardwareSetup, .-prvHardwareSetup
  97              		.section	.text.main,"ax",%progbits
  98              		.align	2
  99              		.global	main
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 5


 100              		.thumb
 101              		.thumb_func
 102              		.type	main, %function
 103              	main:
 104              	.LFB70:
  66:ZumoLibrary/rtos_main.c ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 105              		.loc 1 66 0
 106              		.cfi_startproc
 107              		@ Volatile: function does not return.
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 00B5     		push	{lr}
 111              		.cfi_def_cfa_offset 4
 112              		.cfi_offset 14, -4
 113 0002 83B0     		sub	sp, sp, #12
 114              		.cfi_def_cfa_offset 16
  68:ZumoLibrary/rtos_main.c **** 
 115              		.loc 1 68 0
 116 0004 FFF7FEFF 		bl	prvHardwareSetup
 117              	.LVL6:
  72:ZumoLibrary/rtos_main.c ****     RetargetInit();
 118              		.loc 1 72 0
 119 0008 4FF48070 		mov	r0, #256
 120 000c FFF7FEFF 		bl	vSerial1PortInitMinimal
 121              	.LVL7:
  73:ZumoLibrary/rtos_main.c ****     
 122              		.loc 1 73 0
 123 0010 FFF7FEFF 		bl	RetargetInit
 124              	.LVL8:
  79:ZumoLibrary/rtos_main.c **** #if START_MQTT == 1
 125              		.loc 1 79 0
 126 0014 0024     		movs	r4, #0
 127 0016 0194     		str	r4, [sp, #4]
 128 0018 0123     		movs	r3, #1
 129 001a 0093     		str	r3, [sp]
 130 001c 2346     		mov	r3, r4
 131 001e 4FF47A72 		mov	r2, #1000
 132 0022 0949     		ldr	r1, .L12
 133 0024 0948     		ldr	r0, .L12+4
 134 0026 FFF7FEFF 		bl	xTaskCreate
 135              	.LVL9:
  85:ZumoLibrary/rtos_main.c ****   	( void ) xTaskCreate( SimulatorTask, "Simulator", configMINIMAL_STACK_SIZE * 10, NULL, tskIDLE_P
 136              		.loc 1 85 0
 137 002a FFF7FEFF 		bl	SimulatorTaskInit
 138              	.LVL10:
  86:ZumoLibrary/rtos_main.c **** #endif    
 139              		.loc 1 86 0
 140 002e 0194     		str	r4, [sp, #4]
 141 0030 0223     		movs	r3, #2
 142 0032 0093     		str	r3, [sp]
 143 0034 2346     		mov	r3, r4
 144 0036 4FF47A72 		mov	r2, #1000
 145 003a 0549     		ldr	r1, .L12+8
 146 003c 0548     		ldr	r0, .L12+12
 147 003e FFF7FEFF 		bl	xTaskCreate
 148              	.LVL11:
  91:ZumoLibrary/rtos_main.c **** 
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 6


 149              		.loc 1 91 0
 150 0042 FFF7FEFF 		bl	vTaskStartScheduler
 151              	.LVL12:
 152              	.L10:
 153 0046 FEE7     		b	.L10
 154              	.L13:
 155              		.align	2
 156              	.L12:
 157 0048 1C000000 		.word	.LC1
 158 004c 00000000 		.word	start_zmain
 159 0050 24000000 		.word	.LC2
 160 0054 00000000 		.word	SimulatorTask
 161              		.cfi_endproc
 162              	.LFE70:
 163              		.size	main, .-main
 164              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 165              		.align	2
 166              		.global	vApplicationStackOverflowHook
 167              		.thumb
 168              		.thumb_func
 169              		.type	vApplicationStackOverflowHook, %function
 170              	vApplicationStackOverflowHook:
 171              	.LFB72:
 130:ZumoLibrary/rtos_main.c **** 
 131:ZumoLibrary/rtos_main.c **** }
 132:ZumoLibrary/rtos_main.c **** /*---------------------------------------------------------------------------*/
 133:ZumoLibrary/rtos_main.c **** 
 134:ZumoLibrary/rtos_main.c **** 
 135:ZumoLibrary/rtos_main.c **** /*---------------------------------------------------------------------------*/
 136:ZumoLibrary/rtos_main.c **** 
 137:ZumoLibrary/rtos_main.c **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 138:ZumoLibrary/rtos_main.c **** {
 172              		.loc 1 138 0
 173              		.cfi_startproc
 174              		@ Volatile: function does not return.
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL13:
 179              	.LBB6:
 180              	.LBB7:
 181              		.file 2 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 7


  16:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 8


  73:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 9


 130:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 177:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 10


 187:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 182              		.loc 2 195 0
 183              		.syntax unified
 184              	@ 195 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 185 0000 4FF0A003 			mov r3, #160												
 186 0004 83F31188 		msr basepri, r3											
 187 0008 BFF36F8F 		isb														
 188 000c BFF34F8F 		dsb														
 189              	
 190              	@ 0 "" 2
 191              	.LVL14:
 192              		.thumb
 193              		.syntax unified
 194              	.L15:
 195 0010 FEE7     		b	.L15
 196              	.LBE7:
 197              	.LBE6:
 198              		.cfi_endproc
 199              	.LFE72:
 200              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 201 0012 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 202              		.align	2
 203              		.global	vApplicationMallocFailedHook
 204              		.thumb
 205              		.thumb_func
 206              		.type	vApplicationMallocFailedHook, %function
 207              	vApplicationMallocFailedHook:
 208              	.LFB73:
 139:ZumoLibrary/rtos_main.c ****     (void) pxTask;
 140:ZumoLibrary/rtos_main.c ****     (void) pcTaskName;
 141:ZumoLibrary/rtos_main.c **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 142:ZumoLibrary/rtos_main.c **** 	taskDISABLE_INTERRUPTS();
 143:ZumoLibrary/rtos_main.c **** 	for( ;; );
 144:ZumoLibrary/rtos_main.c **** }
 145:ZumoLibrary/rtos_main.c **** /*---------------------------------------------------------------------------*/
 146:ZumoLibrary/rtos_main.c **** 
 147:ZumoLibrary/rtos_main.c **** void vApplicationMallocFailedHook( void )
 148:ZumoLibrary/rtos_main.c **** {
 209              		.loc 1 148 0
 210              		.cfi_startproc
 211              		@ Volatile: function does not return.
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LBB8:
 216              	.LBB9:
 217              		.loc 2 195 0
 218              		.syntax unified
 219              	@ 195 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 11


 220 0000 4FF0A003 			mov r3, #160												
 221 0004 83F31188 		msr basepri, r3											
 222 0008 BFF36F8F 		isb														
 223 000c BFF34F8F 		dsb														
 224              	
 225              	@ 0 "" 2
 226              	.LVL15:
 227              		.thumb
 228              		.syntax unified
 229              	.L17:
 230 0010 FEE7     		b	.L17
 231              	.LBE9:
 232              	.LBE8:
 233              		.cfi_endproc
 234              	.LFE73:
 235              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 236 0012 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 237              		.align	2
 238              	.LC0:
 239 0000 0A0A0A45 		.ascii	"\012\012\012ERROR - ZMAIN ENDED!!!\012\000"
 239      52524F52 
 239      202D205A 
 239      4D41494E 
 239      20454E44 
 240 001b 00       		.space	1
 241              	.LC1:
 242 001c 5A756D6F 		.ascii	"Zumo\000"
 242      00
 243 0021 000000   		.space	3
 244              	.LC2:
 245 0024 53696D75 		.ascii	"Simulator\000"
 245      6C61746F 
 245      7200
 246              		.text
 247              	.Letext0:
 248              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 249              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 250              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 251              		.file 6 "..\\FreeRTOS\\Source\\include/task.h"
 252              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 253              		.file 8 "Generated_Source\\PSoC5/UART_1.h"
 254              		.file 9 "Generated_Source\\PSoC5/UART_2.h"
 255              		.file 10 "ZumoLibrary\\serial1.h"
 256              		.file 11 "ZumoLibrary\\simulator.h"
 257              		.file 12 "<built-in>"
 258              		.section	.debug_info,"",%progbits
 259              	.Ldebug_info0:
 260 0000 78030000 		.4byte	0x378
 261 0004 0400     		.2byte	0x4
 262 0006 00000000 		.4byte	.Ldebug_abbrev0
 263 000a 04       		.byte	0x4
 264 000b 01       		.uleb128 0x1
 265 000c A0000000 		.4byte	.LASF41
 266 0010 0C       		.byte	0xc
 267 0011 A4010000 		.4byte	.LASF42
 268 0015 86020000 		.4byte	.LASF43
 269 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 12


 270 001d 00000000 		.4byte	0
 271 0021 00000000 		.4byte	.Ldebug_line0
 272 0025 02       		.uleb128 0x2
 273 0026 01       		.byte	0x1
 274 0027 06       		.byte	0x6
 275 0028 25030000 		.4byte	.LASF0
 276 002c 02       		.uleb128 0x2
 277 002d 01       		.byte	0x1
 278 002e 08       		.byte	0x8
 279 002f 92000000 		.4byte	.LASF1
 280 0033 02       		.uleb128 0x2
 281 0034 02       		.byte	0x2
 282 0035 05       		.byte	0x5
 283 0036 EC020000 		.4byte	.LASF2
 284 003a 02       		.uleb128 0x2
 285 003b 02       		.byte	0x2
 286 003c 07       		.byte	0x7
 287 003d 4B010000 		.4byte	.LASF3
 288 0041 03       		.uleb128 0x3
 289 0042 39000000 		.4byte	.LASF5
 290 0046 03       		.byte	0x3
 291 0047 3F       		.byte	0x3f
 292 0048 4C000000 		.4byte	0x4c
 293 004c 02       		.uleb128 0x2
 294 004d 04       		.byte	0x4
 295 004e 05       		.byte	0x5
 296 004f 17030000 		.4byte	.LASF4
 297 0053 03       		.uleb128 0x3
 298 0054 2E010000 		.4byte	.LASF6
 299 0058 03       		.byte	0x3
 300 0059 41       		.byte	0x41
 301 005a 5E000000 		.4byte	0x5e
 302 005e 02       		.uleb128 0x2
 303 005f 04       		.byte	0x4
 304 0060 07       		.byte	0x7
 305 0061 39010000 		.4byte	.LASF7
 306 0065 02       		.uleb128 0x2
 307 0066 08       		.byte	0x8
 308 0067 05       		.byte	0x5
 309 0068 00000000 		.4byte	.LASF8
 310 006c 02       		.uleb128 0x2
 311 006d 08       		.byte	0x8
 312 006e 07       		.byte	0x7
 313 006f E3010000 		.4byte	.LASF9
 314 0073 04       		.uleb128 0x4
 315 0074 04       		.byte	0x4
 316 0075 05       		.byte	0x5
 317 0076 696E7400 		.ascii	"int\000"
 318 007a 02       		.uleb128 0x2
 319 007b 04       		.byte	0x4
 320 007c 07       		.byte	0x7
 321 007d D6010000 		.4byte	.LASF10
 322 0081 03       		.uleb128 0x3
 323 0082 75000000 		.4byte	.LASF11
 324 0086 04       		.byte	0x4
 325 0087 2C       		.byte	0x2c
 326 0088 41000000 		.4byte	0x41
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 13


 327 008c 03       		.uleb128 0x3
 328 008d 0E030000 		.4byte	.LASF12
 329 0091 04       		.byte	0x4
 330 0092 30       		.byte	0x30
 331 0093 53000000 		.4byte	0x53
 332 0097 02       		.uleb128 0x2
 333 0098 04       		.byte	0x4
 334 0099 04       		.byte	0x4
 335 009a 7D000000 		.4byte	.LASF13
 336 009e 02       		.uleb128 0x2
 337 009f 08       		.byte	0x8
 338 00a0 04       		.byte	0x4
 339 00a1 6B010000 		.4byte	.LASF14
 340 00a5 02       		.uleb128 0x2
 341 00a6 01       		.byte	0x1
 342 00a7 08       		.byte	0x8
 343 00a8 71020000 		.4byte	.LASF15
 344 00ac 05       		.uleb128 0x5
 345 00ad FA010000 		.4byte	.LASF16
 346 00b1 05       		.byte	0x5
 347 00b2 A002     		.2byte	0x2a0
 348 00b4 B8000000 		.4byte	0xb8
 349 00b8 06       		.uleb128 0x6
 350 00b9 04       		.byte	0x4
 351 00ba BE000000 		.4byte	0xbe
 352 00be 07       		.uleb128 0x7
 353 00bf 02       		.uleb128 0x2
 354 00c0 08       		.byte	0x8
 355 00c1 04       		.byte	0x4
 356 00c2 3D020000 		.4byte	.LASF17
 357 00c6 02       		.uleb128 0x2
 358 00c7 04       		.byte	0x4
 359 00c8 07       		.byte	0x7
 360 00c9 49020000 		.4byte	.LASF18
 361 00cd 08       		.uleb128 0x8
 362 00ce 04       		.byte	0x4
 363 00cf 06       		.uleb128 0x6
 364 00d0 04       		.byte	0x4
 365 00d1 A5000000 		.4byte	0xa5
 366 00d5 03       		.uleb128 0x3
 367 00d6 31030000 		.4byte	.LASF19
 368 00da 02       		.byte	0x2
 369 00db 39       		.byte	0x39
 370 00dc 5E000000 		.4byte	0x5e
 371 00e0 03       		.uleb128 0x3
 372 00e1 01030000 		.4byte	.LASF20
 373 00e5 06       		.byte	0x6
 374 00e6 3D       		.byte	0x3d
 375 00e7 CD000000 		.4byte	0xcd
 376 00eb 09       		.uleb128 0x9
 377 00ec 5F020000 		.4byte	.LASF44
 378 00f0 02       		.byte	0x2
 379 00f1 BF       		.byte	0xbf
 380 00f2 03       		.byte	0x3
 381 00f3 03010000 		.4byte	0x103
 382 00f7 0A       		.uleb128 0xa
 383 00f8 8A010000 		.4byte	.LASF45
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 14


 384 00fc 02       		.byte	0x2
 385 00fd C1       		.byte	0xc1
 386 00fe 8C000000 		.4byte	0x8c
 387 0102 00       		.byte	0
 388 0103 0B       		.uleb128 0xb
 389 0104 D9020000 		.4byte	.LASF21
 390 0108 01       		.byte	0x1
 391 0109 3A       		.byte	0x3a
 392 010a 00000000 		.4byte	.LFB69
 393 010e 18000000 		.4byte	.LFE69-.LFB69
 394 0112 01       		.uleb128 0x1
 395 0113 9C       		.byte	0x9c
 396 0114 55010000 		.4byte	0x155
 397 0118 0C       		.uleb128 0xc
 398 0119 7000     		.ascii	"p\000"
 399 011b 01       		.byte	0x1
 400 011c 3A       		.byte	0x3a
 401 011d CD000000 		.4byte	0xcd
 402 0121 00000000 		.4byte	.LLST0
 403 0125 0D       		.uleb128 0xd
 404 0126 06000000 		.4byte	.LVL1
 405 012a 06030000 		.4byte	0x306
 406 012e 0E       		.uleb128 0xe
 407 012f 0C000000 		.4byte	.LVL2
 408 0133 11030000 		.4byte	0x311
 409 0137 45010000 		.4byte	0x145
 410 013b 0F       		.uleb128 0xf
 411 013c 01       		.uleb128 0x1
 412 013d 50       		.byte	0x50
 413 013e 05       		.uleb128 0x5
 414 013f 03       		.byte	0x3
 415 0140 00000000 		.4byte	.LC0
 416 0144 00       		.byte	0
 417 0145 10       		.uleb128 0x10
 418 0146 12000000 		.4byte	.LVL3
 419 014a 20030000 		.4byte	0x320
 420 014e 0F       		.uleb128 0xf
 421 014f 01       		.uleb128 0x1
 422 0150 50       		.byte	0x50
 423 0151 01       		.uleb128 0x1
 424 0152 30       		.byte	0x30
 425 0153 00       		.byte	0
 426 0154 00       		.byte	0
 427 0155 0B       		.uleb128 0xb
 428 0156 3D030000 		.4byte	.LASF22
 429 015a 01       		.byte	0x1
 430 015b 72       		.byte	0x72
 431 015c 00000000 		.4byte	.LFB71
 432 0160 2C000000 		.4byte	.LFE71-.LFB71
 433 0164 01       		.uleb128 0x1
 434 0165 9C       		.byte	0x9c
 435 0166 9D010000 		.4byte	0x19d
 436 016a 11       		.uleb128 0x11
 437 016b 55000000 		.4byte	.LASF23
 438 016f 01       		.byte	0x1
 439 0170 75       		.byte	0x75
 440 0171 11       		.uleb128 0x11
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 15


 441 0172 BC010000 		.4byte	.LASF24
 442 0176 01       		.byte	0x1
 443 0177 76       		.byte	0x76
 444 0178 11       		.uleb128 0x11
 445 0179 76020000 		.4byte	.LASF25
 446 017d 01       		.byte	0x1
 447 017e 77       		.byte	0x77
 448 017f 12       		.uleb128 0x12
 449 0180 2C000000 		.4byte	.LASF30
 450 0184 01       		.byte	0x1
 451 0185 78       		.byte	0x78
 452 0186 9D010000 		.4byte	0x19d
 453 018a 0D       		.uleb128 0xd
 454 018b 14000000 		.4byte	.LVL4
 455 018f 2C030000 		.4byte	0x32c
 456 0193 0D       		.uleb128 0xd
 457 0194 18000000 		.4byte	.LVL5
 458 0198 37030000 		.4byte	0x337
 459 019c 00       		.byte	0
 460 019d 13       		.uleb128 0x13
 461 019e AC000000 		.4byte	0xac
 462 01a2 A8010000 		.4byte	0x1a8
 463 01a6 14       		.uleb128 0x14
 464 01a7 00       		.byte	0
 465 01a8 15       		.uleb128 0x15
 466 01a9 38020000 		.4byte	.LASF46
 467 01ad 01       		.byte	0x1
 468 01ae 41       		.byte	0x41
 469 01af 73000000 		.4byte	0x73
 470 01b3 00000000 		.4byte	.LFB70
 471 01b7 58000000 		.4byte	.LFE70-.LFB70
 472 01bb 01       		.uleb128 0x1
 473 01bc 9C       		.byte	0x9c
 474 01bd 66020000 		.4byte	0x266
 475 01c1 0D       		.uleb128 0xd
 476 01c2 08000000 		.4byte	.LVL6
 477 01c6 55010000 		.4byte	0x155
 478 01ca 0E       		.uleb128 0xe
 479 01cb 10000000 		.4byte	.LVL7
 480 01cf 42030000 		.4byte	0x342
 481 01d3 DF010000 		.4byte	0x1df
 482 01d7 0F       		.uleb128 0xf
 483 01d8 01       		.uleb128 0x1
 484 01d9 50       		.byte	0x50
 485 01da 03       		.uleb128 0x3
 486 01db 0A       		.byte	0xa
 487 01dc 0001     		.2byte	0x100
 488 01de 00       		.byte	0
 489 01df 0D       		.uleb128 0xd
 490 01e0 14000000 		.4byte	.LVL8
 491 01e4 4D030000 		.4byte	0x34d
 492 01e8 0E       		.uleb128 0xe
 493 01e9 2A000000 		.4byte	.LVL9
 494 01ed 58030000 		.4byte	0x358
 495 01f1 22020000 		.4byte	0x222
 496 01f5 0F       		.uleb128 0xf
 497 01f6 01       		.uleb128 0x1
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 16


 498 01f7 50       		.byte	0x50
 499 01f8 05       		.uleb128 0x5
 500 01f9 03       		.byte	0x3
 501 01fa 00000000 		.4byte	start_zmain
 502 01fe 0F       		.uleb128 0xf
 503 01ff 01       		.uleb128 0x1
 504 0200 51       		.byte	0x51
 505 0201 05       		.uleb128 0x5
 506 0202 03       		.byte	0x3
 507 0203 1C000000 		.4byte	.LC1
 508 0207 0F       		.uleb128 0xf
 509 0208 01       		.uleb128 0x1
 510 0209 52       		.byte	0x52
 511 020a 03       		.uleb128 0x3
 512 020b 0A       		.byte	0xa
 513 020c E803     		.2byte	0x3e8
 514 020e 0F       		.uleb128 0xf
 515 020f 01       		.uleb128 0x1
 516 0210 53       		.byte	0x53
 517 0211 02       		.uleb128 0x2
 518 0212 74       		.byte	0x74
 519 0213 00       		.sleb128 0
 520 0214 0F       		.uleb128 0xf
 521 0215 02       		.uleb128 0x2
 522 0216 7D       		.byte	0x7d
 523 0217 00       		.sleb128 0
 524 0218 01       		.uleb128 0x1
 525 0219 31       		.byte	0x31
 526 021a 0F       		.uleb128 0xf
 527 021b 02       		.uleb128 0x2
 528 021c 7D       		.byte	0x7d
 529 021d 04       		.sleb128 4
 530 021e 02       		.uleb128 0x2
 531 021f 74       		.byte	0x74
 532 0220 00       		.sleb128 0
 533 0221 00       		.byte	0
 534 0222 0D       		.uleb128 0xd
 535 0223 2E000000 		.4byte	.LVL10
 536 0227 64030000 		.4byte	0x364
 537 022b 0E       		.uleb128 0xe
 538 022c 42000000 		.4byte	.LVL11
 539 0230 58030000 		.4byte	0x358
 540 0234 5C020000 		.4byte	0x25c
 541 0238 0F       		.uleb128 0xf
 542 0239 01       		.uleb128 0x1
 543 023a 51       		.byte	0x51
 544 023b 05       		.uleb128 0x5
 545 023c 03       		.byte	0x3
 546 023d 24000000 		.4byte	.LC2
 547 0241 0F       		.uleb128 0xf
 548 0242 01       		.uleb128 0x1
 549 0243 52       		.byte	0x52
 550 0244 03       		.uleb128 0x3
 551 0245 0A       		.byte	0xa
 552 0246 E803     		.2byte	0x3e8
 553 0248 0F       		.uleb128 0xf
 554 0249 01       		.uleb128 0x1
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 17


 555 024a 53       		.byte	0x53
 556 024b 02       		.uleb128 0x2
 557 024c 74       		.byte	0x74
 558 024d 00       		.sleb128 0
 559 024e 0F       		.uleb128 0xf
 560 024f 02       		.uleb128 0x2
 561 0250 7D       		.byte	0x7d
 562 0251 00       		.sleb128 0
 563 0252 01       		.uleb128 0x1
 564 0253 32       		.byte	0x32
 565 0254 0F       		.uleb128 0xf
 566 0255 02       		.uleb128 0x2
 567 0256 7D       		.byte	0x7d
 568 0257 04       		.sleb128 4
 569 0258 02       		.uleb128 0x2
 570 0259 74       		.byte	0x74
 571 025a 00       		.sleb128 0
 572 025b 00       		.byte	0
 573 025c 0D       		.uleb128 0xd
 574 025d 46000000 		.4byte	.LVL12
 575 0261 6F030000 		.4byte	0x36f
 576 0265 00       		.byte	0
 577 0266 16       		.uleb128 0x16
 578 0267 0E000000 		.4byte	.LASF28
 579 026b 01       		.byte	0x1
 580 026c 89       		.byte	0x89
 581 026d 00000000 		.4byte	.LFB72
 582 0271 12000000 		.4byte	.LFE72-.LFB72
 583 0275 01       		.uleb128 0x1
 584 0276 9C       		.byte	0x9c
 585 0277 B5020000 		.4byte	0x2b5
 586 027b 17       		.uleb128 0x17
 587 027c E5020000 		.4byte	.LASF26
 588 0280 01       		.byte	0x1
 589 0281 89       		.byte	0x89
 590 0282 E0000000 		.4byte	0xe0
 591 0286 01       		.uleb128 0x1
 592 0287 50       		.byte	0x50
 593 0288 17       		.uleb128 0x17
 594 0289 F6020000 		.4byte	.LASF27
 595 028d 01       		.byte	0x1
 596 028e 89       		.byte	0x89
 597 028f CF000000 		.4byte	0xcf
 598 0293 01       		.uleb128 0x1
 599 0294 51       		.byte	0x51
 600 0295 18       		.uleb128 0x18
 601 0296 EB000000 		.4byte	0xeb
 602 029a 00000000 		.4byte	.LBB6
 603 029e 12000000 		.4byte	.LBE6-.LBB6
 604 02a2 01       		.byte	0x1
 605 02a3 8E       		.byte	0x8e
 606 02a4 19       		.uleb128 0x19
 607 02a5 00000000 		.4byte	.LBB7
 608 02a9 12000000 		.4byte	.LBE7-.LBB7
 609 02ad 1A       		.uleb128 0x1a
 610 02ae F7000000 		.4byte	0xf7
 611 02b2 00       		.byte	0
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 18


 612 02b3 00       		.byte	0
 613 02b4 00       		.byte	0
 614 02b5 16       		.uleb128 0x16
 615 02b6 1B020000 		.4byte	.LASF29
 616 02ba 01       		.byte	0x1
 617 02bb 93       		.byte	0x93
 618 02bc 00000000 		.4byte	.LFB73
 619 02c0 12000000 		.4byte	.LFE73-.LFB73
 620 02c4 01       		.uleb128 0x1
 621 02c5 9C       		.byte	0x9c
 622 02c6 EA020000 		.4byte	0x2ea
 623 02ca 18       		.uleb128 0x18
 624 02cb EB000000 		.4byte	0xeb
 625 02cf 00000000 		.4byte	.LBB8
 626 02d3 12000000 		.4byte	.LBE8-.LBB8
 627 02d7 01       		.byte	0x1
 628 02d8 96       		.byte	0x96
 629 02d9 19       		.uleb128 0x19
 630 02da 00000000 		.4byte	.LBB9
 631 02de 12000000 		.4byte	.LBE9-.LBB9
 632 02e2 1A       		.uleb128 0x1a
 633 02e3 F7000000 		.4byte	0xf7
 634 02e7 00       		.byte	0
 635 02e8 00       		.byte	0
 636 02e9 00       		.byte	0
 637 02ea 1B       		.uleb128 0x1b
 638 02eb 5E010000 		.4byte	.LASF31
 639 02ef 07       		.byte	0x7
 640 02f0 1207     		.2byte	0x712
 641 02f2 F6020000 		.4byte	0x2f6
 642 02f6 1C       		.uleb128 0x1c
 643 02f7 81000000 		.4byte	0x81
 644 02fb 12       		.uleb128 0x12
 645 02fc 2C000000 		.4byte	.LASF30
 646 0300 01       		.byte	0x1
 647 0301 78       		.byte	0x78
 648 0302 9D010000 		.4byte	0x19d
 649 0306 1D       		.uleb128 0x1d
 650 0307 D0010000 		.4byte	.LASF32
 651 030b D0010000 		.4byte	.LASF32
 652 030f 01       		.byte	0x1
 653 0310 32       		.byte	0x32
 654 0311 1E       		.uleb128 0x1e
 655 0312 20030000 		.4byte	.LASF47
 656 0316 83000000 		.4byte	.LASF48
 657 031a 0C       		.byte	0xc
 658 031b 00       		.byte	0
 659 031c 20030000 		.4byte	.LASF47
 660 0320 1F       		.uleb128 0x1f
 661 0321 68000000 		.4byte	.LASF33
 662 0325 68000000 		.4byte	.LASF33
 663 0329 06       		.byte	0x6
 664 032a 1F04     		.2byte	0x41f
 665 032c 1D       		.uleb128 0x1d
 666 032d 5A030000 		.4byte	.LASF34
 667 0331 5A030000 		.4byte	.LASF34
 668 0335 08       		.byte	0x8
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 19


 669 0336 54       		.byte	0x54
 670 0337 1D       		.uleb128 0x1d
 671 0338 52020000 		.4byte	.LASF35
 672 033c 52020000 		.4byte	.LASF35
 673 0340 09       		.byte	0x9
 674 0341 54       		.byte	0x54
 675 0342 1D       		.uleb128 0x1d
 676 0343 72010000 		.4byte	.LASF36
 677 0347 72010000 		.4byte	.LASF36
 678 034b 0A       		.byte	0xa
 679 034c 22       		.byte	0x22
 680 034d 1D       		.uleb128 0x1d
 681 034e 97010000 		.4byte	.LASF37
 682 0352 97010000 		.4byte	.LASF37
 683 0356 0A       		.byte	0xa
 684 0357 21       		.byte	0x21
 685 0358 1F       		.uleb128 0x1f
 686 0359 4E030000 		.4byte	.LASF38
 687 035d 4E030000 		.4byte	.LASF38
 688 0361 06       		.byte	0x6
 689 0362 4101     		.2byte	0x141
 690 0364 1D       		.uleb128 0x1d
 691 0365 43000000 		.4byte	.LASF39
 692 0369 43000000 		.4byte	.LASF39
 693 036d 0B       		.byte	0xb
 694 036e 05       		.byte	0x5
 695 036f 1F       		.uleb128 0x1f
 696 0370 07020000 		.4byte	.LASF40
 697 0374 07020000 		.4byte	.LASF40
 698 0378 06       		.byte	0x6
 699 0379 8E04     		.2byte	0x48e
 700 037b 00       		.byte	0
 701              		.section	.debug_abbrev,"",%progbits
 702              	.Ldebug_abbrev0:
 703 0000 01       		.uleb128 0x1
 704 0001 11       		.uleb128 0x11
 705 0002 01       		.byte	0x1
 706 0003 25       		.uleb128 0x25
 707 0004 0E       		.uleb128 0xe
 708 0005 13       		.uleb128 0x13
 709 0006 0B       		.uleb128 0xb
 710 0007 03       		.uleb128 0x3
 711 0008 0E       		.uleb128 0xe
 712 0009 1B       		.uleb128 0x1b
 713 000a 0E       		.uleb128 0xe
 714 000b 55       		.uleb128 0x55
 715 000c 17       		.uleb128 0x17
 716 000d 11       		.uleb128 0x11
 717 000e 01       		.uleb128 0x1
 718 000f 10       		.uleb128 0x10
 719 0010 17       		.uleb128 0x17
 720 0011 00       		.byte	0
 721 0012 00       		.byte	0
 722 0013 02       		.uleb128 0x2
 723 0014 24       		.uleb128 0x24
 724 0015 00       		.byte	0
 725 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 20


 726 0017 0B       		.uleb128 0xb
 727 0018 3E       		.uleb128 0x3e
 728 0019 0B       		.uleb128 0xb
 729 001a 03       		.uleb128 0x3
 730 001b 0E       		.uleb128 0xe
 731 001c 00       		.byte	0
 732 001d 00       		.byte	0
 733 001e 03       		.uleb128 0x3
 734 001f 16       		.uleb128 0x16
 735 0020 00       		.byte	0
 736 0021 03       		.uleb128 0x3
 737 0022 0E       		.uleb128 0xe
 738 0023 3A       		.uleb128 0x3a
 739 0024 0B       		.uleb128 0xb
 740 0025 3B       		.uleb128 0x3b
 741 0026 0B       		.uleb128 0xb
 742 0027 49       		.uleb128 0x49
 743 0028 13       		.uleb128 0x13
 744 0029 00       		.byte	0
 745 002a 00       		.byte	0
 746 002b 04       		.uleb128 0x4
 747 002c 24       		.uleb128 0x24
 748 002d 00       		.byte	0
 749 002e 0B       		.uleb128 0xb
 750 002f 0B       		.uleb128 0xb
 751 0030 3E       		.uleb128 0x3e
 752 0031 0B       		.uleb128 0xb
 753 0032 03       		.uleb128 0x3
 754 0033 08       		.uleb128 0x8
 755 0034 00       		.byte	0
 756 0035 00       		.byte	0
 757 0036 05       		.uleb128 0x5
 758 0037 16       		.uleb128 0x16
 759 0038 00       		.byte	0
 760 0039 03       		.uleb128 0x3
 761 003a 0E       		.uleb128 0xe
 762 003b 3A       		.uleb128 0x3a
 763 003c 0B       		.uleb128 0xb
 764 003d 3B       		.uleb128 0x3b
 765 003e 05       		.uleb128 0x5
 766 003f 49       		.uleb128 0x49
 767 0040 13       		.uleb128 0x13
 768 0041 00       		.byte	0
 769 0042 00       		.byte	0
 770 0043 06       		.uleb128 0x6
 771 0044 0F       		.uleb128 0xf
 772 0045 00       		.byte	0
 773 0046 0B       		.uleb128 0xb
 774 0047 0B       		.uleb128 0xb
 775 0048 49       		.uleb128 0x49
 776 0049 13       		.uleb128 0x13
 777 004a 00       		.byte	0
 778 004b 00       		.byte	0
 779 004c 07       		.uleb128 0x7
 780 004d 15       		.uleb128 0x15
 781 004e 00       		.byte	0
 782 004f 27       		.uleb128 0x27
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 21


 783 0050 19       		.uleb128 0x19
 784 0051 00       		.byte	0
 785 0052 00       		.byte	0
 786 0053 08       		.uleb128 0x8
 787 0054 0F       		.uleb128 0xf
 788 0055 00       		.byte	0
 789 0056 0B       		.uleb128 0xb
 790 0057 0B       		.uleb128 0xb
 791 0058 00       		.byte	0
 792 0059 00       		.byte	0
 793 005a 09       		.uleb128 0x9
 794 005b 2E       		.uleb128 0x2e
 795 005c 01       		.byte	0x1
 796 005d 03       		.uleb128 0x3
 797 005e 0E       		.uleb128 0xe
 798 005f 3A       		.uleb128 0x3a
 799 0060 0B       		.uleb128 0xb
 800 0061 3B       		.uleb128 0x3b
 801 0062 0B       		.uleb128 0xb
 802 0063 27       		.uleb128 0x27
 803 0064 19       		.uleb128 0x19
 804 0065 20       		.uleb128 0x20
 805 0066 0B       		.uleb128 0xb
 806 0067 01       		.uleb128 0x1
 807 0068 13       		.uleb128 0x13
 808 0069 00       		.byte	0
 809 006a 00       		.byte	0
 810 006b 0A       		.uleb128 0xa
 811 006c 34       		.uleb128 0x34
 812 006d 00       		.byte	0
 813 006e 03       		.uleb128 0x3
 814 006f 0E       		.uleb128 0xe
 815 0070 3A       		.uleb128 0x3a
 816 0071 0B       		.uleb128 0xb
 817 0072 3B       		.uleb128 0x3b
 818 0073 0B       		.uleb128 0xb
 819 0074 49       		.uleb128 0x49
 820 0075 13       		.uleb128 0x13
 821 0076 00       		.byte	0
 822 0077 00       		.byte	0
 823 0078 0B       		.uleb128 0xb
 824 0079 2E       		.uleb128 0x2e
 825 007a 01       		.byte	0x1
 826 007b 03       		.uleb128 0x3
 827 007c 0E       		.uleb128 0xe
 828 007d 3A       		.uleb128 0x3a
 829 007e 0B       		.uleb128 0xb
 830 007f 3B       		.uleb128 0x3b
 831 0080 0B       		.uleb128 0xb
 832 0081 27       		.uleb128 0x27
 833 0082 19       		.uleb128 0x19
 834 0083 11       		.uleb128 0x11
 835 0084 01       		.uleb128 0x1
 836 0085 12       		.uleb128 0x12
 837 0086 06       		.uleb128 0x6
 838 0087 40       		.uleb128 0x40
 839 0088 18       		.uleb128 0x18
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 22


 840 0089 9742     		.uleb128 0x2117
 841 008b 19       		.uleb128 0x19
 842 008c 01       		.uleb128 0x1
 843 008d 13       		.uleb128 0x13
 844 008e 00       		.byte	0
 845 008f 00       		.byte	0
 846 0090 0C       		.uleb128 0xc
 847 0091 05       		.uleb128 0x5
 848 0092 00       		.byte	0
 849 0093 03       		.uleb128 0x3
 850 0094 08       		.uleb128 0x8
 851 0095 3A       		.uleb128 0x3a
 852 0096 0B       		.uleb128 0xb
 853 0097 3B       		.uleb128 0x3b
 854 0098 0B       		.uleb128 0xb
 855 0099 49       		.uleb128 0x49
 856 009a 13       		.uleb128 0x13
 857 009b 02       		.uleb128 0x2
 858 009c 17       		.uleb128 0x17
 859 009d 00       		.byte	0
 860 009e 00       		.byte	0
 861 009f 0D       		.uleb128 0xd
 862 00a0 898201   		.uleb128 0x4109
 863 00a3 00       		.byte	0
 864 00a4 11       		.uleb128 0x11
 865 00a5 01       		.uleb128 0x1
 866 00a6 31       		.uleb128 0x31
 867 00a7 13       		.uleb128 0x13
 868 00a8 00       		.byte	0
 869 00a9 00       		.byte	0
 870 00aa 0E       		.uleb128 0xe
 871 00ab 898201   		.uleb128 0x4109
 872 00ae 01       		.byte	0x1
 873 00af 11       		.uleb128 0x11
 874 00b0 01       		.uleb128 0x1
 875 00b1 31       		.uleb128 0x31
 876 00b2 13       		.uleb128 0x13
 877 00b3 01       		.uleb128 0x1
 878 00b4 13       		.uleb128 0x13
 879 00b5 00       		.byte	0
 880 00b6 00       		.byte	0
 881 00b7 0F       		.uleb128 0xf
 882 00b8 8A8201   		.uleb128 0x410a
 883 00bb 00       		.byte	0
 884 00bc 02       		.uleb128 0x2
 885 00bd 18       		.uleb128 0x18
 886 00be 9142     		.uleb128 0x2111
 887 00c0 18       		.uleb128 0x18
 888 00c1 00       		.byte	0
 889 00c2 00       		.byte	0
 890 00c3 10       		.uleb128 0x10
 891 00c4 898201   		.uleb128 0x4109
 892 00c7 01       		.byte	0x1
 893 00c8 11       		.uleb128 0x11
 894 00c9 01       		.uleb128 0x1
 895 00ca 31       		.uleb128 0x31
 896 00cb 13       		.uleb128 0x13
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 23


 897 00cc 00       		.byte	0
 898 00cd 00       		.byte	0
 899 00ce 11       		.uleb128 0x11
 900 00cf 2E       		.uleb128 0x2e
 901 00d0 00       		.byte	0
 902 00d1 3F       		.uleb128 0x3f
 903 00d2 19       		.uleb128 0x19
 904 00d3 03       		.uleb128 0x3
 905 00d4 0E       		.uleb128 0xe
 906 00d5 3A       		.uleb128 0x3a
 907 00d6 0B       		.uleb128 0xb
 908 00d7 3B       		.uleb128 0x3b
 909 00d8 0B       		.uleb128 0xb
 910 00d9 27       		.uleb128 0x27
 911 00da 19       		.uleb128 0x19
 912 00db 3C       		.uleb128 0x3c
 913 00dc 19       		.uleb128 0x19
 914 00dd 00       		.byte	0
 915 00de 00       		.byte	0
 916 00df 12       		.uleb128 0x12
 917 00e0 34       		.uleb128 0x34
 918 00e1 00       		.byte	0
 919 00e2 03       		.uleb128 0x3
 920 00e3 0E       		.uleb128 0xe
 921 00e4 3A       		.uleb128 0x3a
 922 00e5 0B       		.uleb128 0xb
 923 00e6 3B       		.uleb128 0x3b
 924 00e7 0B       		.uleb128 0xb
 925 00e8 49       		.uleb128 0x49
 926 00e9 13       		.uleb128 0x13
 927 00ea 3F       		.uleb128 0x3f
 928 00eb 19       		.uleb128 0x19
 929 00ec 3C       		.uleb128 0x3c
 930 00ed 19       		.uleb128 0x19
 931 00ee 00       		.byte	0
 932 00ef 00       		.byte	0
 933 00f0 13       		.uleb128 0x13
 934 00f1 01       		.uleb128 0x1
 935 00f2 01       		.byte	0x1
 936 00f3 49       		.uleb128 0x49
 937 00f4 13       		.uleb128 0x13
 938 00f5 01       		.uleb128 0x1
 939 00f6 13       		.uleb128 0x13
 940 00f7 00       		.byte	0
 941 00f8 00       		.byte	0
 942 00f9 14       		.uleb128 0x14
 943 00fa 21       		.uleb128 0x21
 944 00fb 00       		.byte	0
 945 00fc 00       		.byte	0
 946 00fd 00       		.byte	0
 947 00fe 15       		.uleb128 0x15
 948 00ff 2E       		.uleb128 0x2e
 949 0100 01       		.byte	0x1
 950 0101 3F       		.uleb128 0x3f
 951 0102 19       		.uleb128 0x19
 952 0103 03       		.uleb128 0x3
 953 0104 0E       		.uleb128 0xe
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 24


 954 0105 3A       		.uleb128 0x3a
 955 0106 0B       		.uleb128 0xb
 956 0107 3B       		.uleb128 0x3b
 957 0108 0B       		.uleb128 0xb
 958 0109 27       		.uleb128 0x27
 959 010a 19       		.uleb128 0x19
 960 010b 49       		.uleb128 0x49
 961 010c 13       		.uleb128 0x13
 962 010d 8701     		.uleb128 0x87
 963 010f 19       		.uleb128 0x19
 964 0110 11       		.uleb128 0x11
 965 0111 01       		.uleb128 0x1
 966 0112 12       		.uleb128 0x12
 967 0113 06       		.uleb128 0x6
 968 0114 40       		.uleb128 0x40
 969 0115 18       		.uleb128 0x18
 970 0116 9742     		.uleb128 0x2117
 971 0118 19       		.uleb128 0x19
 972 0119 01       		.uleb128 0x1
 973 011a 13       		.uleb128 0x13
 974 011b 00       		.byte	0
 975 011c 00       		.byte	0
 976 011d 16       		.uleb128 0x16
 977 011e 2E       		.uleb128 0x2e
 978 011f 01       		.byte	0x1
 979 0120 3F       		.uleb128 0x3f
 980 0121 19       		.uleb128 0x19
 981 0122 03       		.uleb128 0x3
 982 0123 0E       		.uleb128 0xe
 983 0124 3A       		.uleb128 0x3a
 984 0125 0B       		.uleb128 0xb
 985 0126 3B       		.uleb128 0x3b
 986 0127 0B       		.uleb128 0xb
 987 0128 27       		.uleb128 0x27
 988 0129 19       		.uleb128 0x19
 989 012a 8701     		.uleb128 0x87
 990 012c 19       		.uleb128 0x19
 991 012d 11       		.uleb128 0x11
 992 012e 01       		.uleb128 0x1
 993 012f 12       		.uleb128 0x12
 994 0130 06       		.uleb128 0x6
 995 0131 40       		.uleb128 0x40
 996 0132 18       		.uleb128 0x18
 997 0133 9742     		.uleb128 0x2117
 998 0135 19       		.uleb128 0x19
 999 0136 01       		.uleb128 0x1
 1000 0137 13       		.uleb128 0x13
 1001 0138 00       		.byte	0
 1002 0139 00       		.byte	0
 1003 013a 17       		.uleb128 0x17
 1004 013b 05       		.uleb128 0x5
 1005 013c 00       		.byte	0
 1006 013d 03       		.uleb128 0x3
 1007 013e 0E       		.uleb128 0xe
 1008 013f 3A       		.uleb128 0x3a
 1009 0140 0B       		.uleb128 0xb
 1010 0141 3B       		.uleb128 0x3b
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 25


 1011 0142 0B       		.uleb128 0xb
 1012 0143 49       		.uleb128 0x49
 1013 0144 13       		.uleb128 0x13
 1014 0145 02       		.uleb128 0x2
 1015 0146 18       		.uleb128 0x18
 1016 0147 00       		.byte	0
 1017 0148 00       		.byte	0
 1018 0149 18       		.uleb128 0x18
 1019 014a 1D       		.uleb128 0x1d
 1020 014b 01       		.byte	0x1
 1021 014c 31       		.uleb128 0x31
 1022 014d 13       		.uleb128 0x13
 1023 014e 11       		.uleb128 0x11
 1024 014f 01       		.uleb128 0x1
 1025 0150 12       		.uleb128 0x12
 1026 0151 06       		.uleb128 0x6
 1027 0152 58       		.uleb128 0x58
 1028 0153 0B       		.uleb128 0xb
 1029 0154 59       		.uleb128 0x59
 1030 0155 0B       		.uleb128 0xb
 1031 0156 00       		.byte	0
 1032 0157 00       		.byte	0
 1033 0158 19       		.uleb128 0x19
 1034 0159 0B       		.uleb128 0xb
 1035 015a 01       		.byte	0x1
 1036 015b 11       		.uleb128 0x11
 1037 015c 01       		.uleb128 0x1
 1038 015d 12       		.uleb128 0x12
 1039 015e 06       		.uleb128 0x6
 1040 015f 00       		.byte	0
 1041 0160 00       		.byte	0
 1042 0161 1A       		.uleb128 0x1a
 1043 0162 34       		.uleb128 0x34
 1044 0163 00       		.byte	0
 1045 0164 31       		.uleb128 0x31
 1046 0165 13       		.uleb128 0x13
 1047 0166 00       		.byte	0
 1048 0167 00       		.byte	0
 1049 0168 1B       		.uleb128 0x1b
 1050 0169 34       		.uleb128 0x34
 1051 016a 00       		.byte	0
 1052 016b 03       		.uleb128 0x3
 1053 016c 0E       		.uleb128 0xe
 1054 016d 3A       		.uleb128 0x3a
 1055 016e 0B       		.uleb128 0xb
 1056 016f 3B       		.uleb128 0x3b
 1057 0170 05       		.uleb128 0x5
 1058 0171 49       		.uleb128 0x49
 1059 0172 13       		.uleb128 0x13
 1060 0173 3F       		.uleb128 0x3f
 1061 0174 19       		.uleb128 0x19
 1062 0175 3C       		.uleb128 0x3c
 1063 0176 19       		.uleb128 0x19
 1064 0177 00       		.byte	0
 1065 0178 00       		.byte	0
 1066 0179 1C       		.uleb128 0x1c
 1067 017a 35       		.uleb128 0x35
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 26


 1068 017b 00       		.byte	0
 1069 017c 49       		.uleb128 0x49
 1070 017d 13       		.uleb128 0x13
 1071 017e 00       		.byte	0
 1072 017f 00       		.byte	0
 1073 0180 1D       		.uleb128 0x1d
 1074 0181 2E       		.uleb128 0x2e
 1075 0182 00       		.byte	0
 1076 0183 3F       		.uleb128 0x3f
 1077 0184 19       		.uleb128 0x19
 1078 0185 3C       		.uleb128 0x3c
 1079 0186 19       		.uleb128 0x19
 1080 0187 6E       		.uleb128 0x6e
 1081 0188 0E       		.uleb128 0xe
 1082 0189 03       		.uleb128 0x3
 1083 018a 0E       		.uleb128 0xe
 1084 018b 3A       		.uleb128 0x3a
 1085 018c 0B       		.uleb128 0xb
 1086 018d 3B       		.uleb128 0x3b
 1087 018e 0B       		.uleb128 0xb
 1088 018f 00       		.byte	0
 1089 0190 00       		.byte	0
 1090 0191 1E       		.uleb128 0x1e
 1091 0192 2E       		.uleb128 0x2e
 1092 0193 00       		.byte	0
 1093 0194 3F       		.uleb128 0x3f
 1094 0195 19       		.uleb128 0x19
 1095 0196 3C       		.uleb128 0x3c
 1096 0197 19       		.uleb128 0x19
 1097 0198 6E       		.uleb128 0x6e
 1098 0199 0E       		.uleb128 0xe
 1099 019a 03       		.uleb128 0x3
 1100 019b 0E       		.uleb128 0xe
 1101 019c 3A       		.uleb128 0x3a
 1102 019d 0B       		.uleb128 0xb
 1103 019e 3B       		.uleb128 0x3b
 1104 019f 0B       		.uleb128 0xb
 1105 01a0 6E       		.uleb128 0x6e
 1106 01a1 0E       		.uleb128 0xe
 1107 01a2 00       		.byte	0
 1108 01a3 00       		.byte	0
 1109 01a4 1F       		.uleb128 0x1f
 1110 01a5 2E       		.uleb128 0x2e
 1111 01a6 00       		.byte	0
 1112 01a7 3F       		.uleb128 0x3f
 1113 01a8 19       		.uleb128 0x19
 1114 01a9 3C       		.uleb128 0x3c
 1115 01aa 19       		.uleb128 0x19
 1116 01ab 6E       		.uleb128 0x6e
 1117 01ac 0E       		.uleb128 0xe
 1118 01ad 03       		.uleb128 0x3
 1119 01ae 0E       		.uleb128 0xe
 1120 01af 3A       		.uleb128 0x3a
 1121 01b0 0B       		.uleb128 0xb
 1122 01b1 3B       		.uleb128 0x3b
 1123 01b2 05       		.uleb128 0x5
 1124 01b3 00       		.byte	0
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 27


 1125 01b4 00       		.byte	0
 1126 01b5 00       		.byte	0
 1127              		.section	.debug_loc,"",%progbits
 1128              	.Ldebug_loc0:
 1129              	.LLST0:
 1130 0000 00000000 		.4byte	.LVL0
 1131 0004 05000000 		.4byte	.LVL1-1
 1132 0008 0100     		.2byte	0x1
 1133 000a 50       		.byte	0x50
 1134 000b 05000000 		.4byte	.LVL1-1
 1135 000f 18000000 		.4byte	.LFE69
 1136 0013 0400     		.2byte	0x4
 1137 0015 F3       		.byte	0xf3
 1138 0016 01       		.uleb128 0x1
 1139 0017 50       		.byte	0x50
 1140 0018 9F       		.byte	0x9f
 1141 0019 00000000 		.4byte	0
 1142 001d 00000000 		.4byte	0
 1143              		.section	.debug_aranges,"",%progbits
 1144 0000 3C000000 		.4byte	0x3c
 1145 0004 0200     		.2byte	0x2
 1146 0006 00000000 		.4byte	.Ldebug_info0
 1147 000a 04       		.byte	0x4
 1148 000b 00       		.byte	0
 1149 000c 0000     		.2byte	0
 1150 000e 0000     		.2byte	0
 1151 0010 00000000 		.4byte	.LFB69
 1152 0014 18000000 		.4byte	.LFE69-.LFB69
 1153 0018 00000000 		.4byte	.LFB71
 1154 001c 2C000000 		.4byte	.LFE71-.LFB71
 1155 0020 00000000 		.4byte	.LFB70
 1156 0024 58000000 		.4byte	.LFE70-.LFB70
 1157 0028 00000000 		.4byte	.LFB72
 1158 002c 12000000 		.4byte	.LFE72-.LFB72
 1159 0030 00000000 		.4byte	.LFB73
 1160 0034 12000000 		.4byte	.LFE73-.LFB73
 1161 0038 00000000 		.4byte	0
 1162 003c 00000000 		.4byte	0
 1163              		.section	.debug_ranges,"",%progbits
 1164              	.Ldebug_ranges0:
 1165 0000 00000000 		.4byte	.LFB69
 1166 0004 18000000 		.4byte	.LFE69
 1167 0008 00000000 		.4byte	.LFB71
 1168 000c 2C000000 		.4byte	.LFE71
 1169 0010 00000000 		.4byte	.LFB70
 1170 0014 58000000 		.4byte	.LFE70
 1171 0018 00000000 		.4byte	.LFB72
 1172 001c 12000000 		.4byte	.LFE72
 1173 0020 00000000 		.4byte	.LFB73
 1174 0024 12000000 		.4byte	.LFE73
 1175 0028 00000000 		.4byte	0
 1176 002c 00000000 		.4byte	0
 1177              		.section	.debug_line,"",%progbits
 1178              	.Ldebug_line0:
 1179 0000 69020000 		.section	.debug_str,"MS",%progbits,1
 1179      0200FB01 
 1179      00000201 
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 28


 1179      FB0E0D00 
 1179      01010101 
 1180              	.LASF8:
 1181 0000 6C6F6E67 		.ascii	"long long int\000"
 1181      206C6F6E 
 1181      6720696E 
 1181      7400
 1182              	.LASF28:
 1183 000e 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1183      6C696361 
 1183      74696F6E 
 1183      53746163 
 1183      6B4F7665 
 1184              	.LASF30:
 1185 002c 43795261 		.ascii	"CyRamVectors\000"
 1185      6D566563 
 1185      746F7273 
 1185      00
 1186              	.LASF5:
 1187 0039 5F5F696E 		.ascii	"__int32_t\000"
 1187      7433325F 
 1187      7400
 1188              	.LASF39:
 1189 0043 53696D75 		.ascii	"SimulatorTaskInit\000"
 1189      6C61746F 
 1189      72546173 
 1189      6B496E69 
 1189      7400
 1190              	.LASF23:
 1191 0055 78506F72 		.ascii	"xPortPendSVHandler\000"
 1191      7450656E 
 1191      64535648 
 1191      616E646C 
 1191      657200
 1192              	.LASF33:
 1193 0068 76546173 		.ascii	"vTaskSuspend\000"
 1193      6B537573 
 1193      70656E64 
 1193      00
 1194              	.LASF11:
 1195 0075 696E7433 		.ascii	"int32_t\000"
 1195      325F7400 
 1196              	.LASF13:
 1197 007d 666C6F61 		.ascii	"float\000"
 1197      7400
 1198              	.LASF48:
 1199 0083 5F5F6275 		.ascii	"__builtin_puts\000"
 1199      696C7469 
 1199      6E5F7075 
 1199      747300
 1200              	.LASF1:
 1201 0092 756E7369 		.ascii	"unsigned char\000"
 1201      676E6564 
 1201      20636861 
 1201      7200
 1202              	.LASF41:
 1203 00a0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 29


 1203      43313120 
 1203      352E342E 
 1203      31203230 
 1203      31363036 
 1204 00d3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1204      20726576 
 1204      6973696F 
 1204      6E203233 
 1204      37373135 
 1205 0106 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1205      66756E63 
 1205      74696F6E 
 1205      2D736563 
 1205      74696F6E 
 1206              	.LASF6:
 1207 012e 5F5F7569 		.ascii	"__uint32_t\000"
 1207      6E743332 
 1207      5F7400
 1208              	.LASF7:
 1209 0139 6C6F6E67 		.ascii	"long unsigned int\000"
 1209      20756E73 
 1209      69676E65 
 1209      6420696E 
 1209      7400
 1210              	.LASF3:
 1211 014b 73686F72 		.ascii	"short unsigned int\000"
 1211      7420756E 
 1211      7369676E 
 1211      65642069 
 1211      6E7400
 1212              	.LASF31:
 1213 015e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1213      52784275 
 1213      66666572 
 1213      00
 1214              	.LASF14:
 1215 016b 646F7562 		.ascii	"double\000"
 1215      6C6500
 1216              	.LASF36:
 1217 0172 76536572 		.ascii	"vSerial1PortInitMinimal\000"
 1217      69616C31 
 1217      506F7274 
 1217      496E6974 
 1217      4D696E69 
 1218              	.LASF45:
 1219 018a 756C4E65 		.ascii	"ulNewBASEPRI\000"
 1219      77424153 
 1219      45505249 
 1219      00
 1220              	.LASF37:
 1221 0197 52657461 		.ascii	"RetargetInit\000"
 1221      72676574 
 1221      496E6974 
 1221      00
 1222              	.LASF42:
 1223 01a4 5A756D6F 		.ascii	"ZumoLibrary\\rtos_main.c\000"
 1223      4C696272 
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 30


 1223      6172795C 
 1223      72746F73 
 1223      5F6D6169 
 1224              	.LASF24:
 1225 01bc 78506F72 		.ascii	"xPortSysTickHandler\000"
 1225      74537973 
 1225      5469636B 
 1225      48616E64 
 1225      6C657200 
 1226              	.LASF32:
 1227 01d0 7A6D6169 		.ascii	"zmain\000"
 1227      6E00
 1228              	.LASF10:
 1229 01d6 756E7369 		.ascii	"unsigned int\000"
 1229      676E6564 
 1229      20696E74 
 1229      00
 1230              	.LASF9:
 1231 01e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1231      206C6F6E 
 1231      6720756E 
 1231      7369676E 
 1231      65642069 
 1232              	.LASF16:
 1233 01fa 63796973 		.ascii	"cyisraddress\000"
 1233      72616464 
 1233      72657373 
 1233      00
 1234              	.LASF40:
 1235 0207 76546173 		.ascii	"vTaskStartScheduler\000"
 1235      6B537461 
 1235      72745363 
 1235      68656475 
 1235      6C657200 
 1236              	.LASF29:
 1237 021b 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 1237      6C696361 
 1237      74696F6E 
 1237      4D616C6C 
 1237      6F634661 
 1238              	.LASF46:
 1239 0238 6D61696E 		.ascii	"main\000"
 1239      00
 1240              	.LASF17:
 1241 023d 6C6F6E67 		.ascii	"long double\000"
 1241      20646F75 
 1241      626C6500 
 1242              	.LASF18:
 1243 0249 73697A65 		.ascii	"sizetype\000"
 1243      74797065 
 1243      00
 1244              	.LASF35:
 1245 0252 55415254 		.ascii	"UART_2_Start\000"
 1245      5F325F53 
 1245      74617274 
 1245      00
 1246              	.LASF44:
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 31


 1247 025f 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 1247      74526169 
 1247      73654241 
 1247      53455052 
 1247      4900
 1248              	.LASF15:
 1249 0271 63686172 		.ascii	"char\000"
 1249      00
 1250              	.LASF25:
 1251 0276 76506F72 		.ascii	"vPortSVCHandler\000"
 1251      74535643 
 1251      48616E64 
 1251      6C657200 
 1252              	.LASF43:
 1253 0286 433A5C55 		.ascii	"C:\\Users\\Windows10-Dung Tran\\Documents\\SmartDev"
 1253      73657273 
 1253      5C57696E 
 1253      646F7773 
 1253      31302D44 
 1254 02b5 69636573 		.ascii	"ices2021\\group11-zumo\\ZumoBot.cydsn\000"
 1254      32303231 
 1254      5C67726F 
 1254      75703131 
 1254      2D7A756D 
 1255              	.LASF21:
 1256 02d9 73746172 		.ascii	"start_zmain\000"
 1256      745F7A6D 
 1256      61696E00 
 1257              	.LASF26:
 1258 02e5 70785461 		.ascii	"pxTask\000"
 1258      736B00
 1259              	.LASF2:
 1260 02ec 73686F72 		.ascii	"short int\000"
 1260      7420696E 
 1260      7400
 1261              	.LASF27:
 1262 02f6 70635461 		.ascii	"pcTaskName\000"
 1262      736B4E61 
 1262      6D6500
 1263              	.LASF20:
 1264 0301 5461736B 		.ascii	"TaskHandle_t\000"
 1264      48616E64 
 1264      6C655F74 
 1264      00
 1265              	.LASF12:
 1266 030e 75696E74 		.ascii	"uint32_t\000"
 1266      33325F74 
 1266      00
 1267              	.LASF4:
 1268 0317 6C6F6E67 		.ascii	"long int\000"
 1268      20696E74 
 1268      00
 1269              	.LASF47:
 1270 0320 70757473 		.ascii	"puts\000"
 1270      00
 1271              	.LASF0:
 1272 0325 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\WINDOW~1\AppData\Local\Temp\cckRxRA2.s 			page 32


 1272      65642063 
 1272      68617200 
 1273              	.LASF19:
 1274 0331 55426173 		.ascii	"UBaseType_t\000"
 1274      65547970 
 1274      655F7400 
 1275              	.LASF22:
 1276 033d 70727648 		.ascii	"prvHardwareSetup\000"
 1276      61726477 
 1276      61726553 
 1276      65747570 
 1276      00
 1277              	.LASF38:
 1278 034e 78546173 		.ascii	"xTaskCreate\000"
 1278      6B437265 
 1278      61746500 
 1279              	.LASF34:
 1280 035a 55415254 		.ascii	"UART_1_Start\000"
 1280      5F315F53 
 1280      74617274 
 1280      00
 1281              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
